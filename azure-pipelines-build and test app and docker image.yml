# Build NodeTours Node.js project with npm.
# Build a docker image and push it to przemekulik/nodetours Docker Hub repository
# Pull it from Docker Hub, run and test the API

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  tag: '2.0'

stages:
- stage: BuildApp
  displayName: Build App
  jobs:
  - job: BubildApp
    displayName: Build App
    steps: 
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
        checkLatest: true
      displayName: 'Install Node.js'
    - script: |
        npm install
        npm run build
      displayName: 'npm install and build'

- stage: BuildAndPushDockerImage
  displayName: Build and push docker image
  jobs:  
  - job: BuildAndPush
    displayName: Build and push docker image
    steps:
    - task: Docker@2
      displayName: Build an image and push to Docker Hub
      inputs:
        containerRegistry: 'Docker Hub'
        repository: 'przemekulik/nodetours'
        command: buildAndPush
        dockerfile: '$(Build.SourcesDirectory)/deploy/docker/Dockerfile'
        buildContext: .
        tags: |
          $(tag)

- stage: PullRunAndTest
  displayName: Pull, run and test nodetours container
  jobs:
  - job: PullRunAndTest
    displayName: Pull, run and test nodetours container
    steps: 
    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # pull image
          docker pull przemekulik/nodetours:1.0
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # pull image
          docker pull mongo:latest


    - task: DockerCompose@0
      inputs:
        containerregistrytype: 'Container Registry'
        dockerRegistryEndpoint: 'Docker Hub'
        dockerComposeFile: '$(Build.SourcesDirectory)/deploy/docker/docker-compose.yaml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'up -d'

    - task: InvokeRESTAPI@1
      inputs:
        connectionType: 'connectedServiceName'
        serviceConnection: 'localhost'
        method: 'GET'
        urlSuffix: ':7777'
        waitForCompletion: 'false'

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # call the API
          sleep 10s && curl -I  http://localhost:7777
      
